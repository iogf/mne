#! /usr/bin/env python2

from os.path import join, expanduser
from datetime import datetime
from random import randint
from libmne import Mne
from libdae import Daemon
from subprocess import call
import argparse
import time

class Dzen2(object):
    def __call__(self, msg, time):
        lines = msg.count('\n') + 1
        cmd   = "echo '%s' | dzen2 -p -bg %s -fg %s -l %s -fn %s" % \
                (msg, self.background, self.foreground, lines, self.font)     
        call(cmd, shell=True)

    def __init__(self, background='yellow', foreground='black', font='fixed'):
        self.background = background
        self.foreground = foreground
        self.font       = font

class App(Daemon):
    def __init__(self, dzen2):
        Daemon.__init__(self, join(expanduser('~'), 'mne.pid'))

        # Whenever attempts to stop the daemon
        # before instantiating Mne class.
        self.stop()
        self.mne = Mne(join(expanduser('~'), '.mne'), dzen2)

    def run(self):        
        while True:
            time.sleep(5)
            self.mne.process()

def main():
    today  = datetime.today()
    dzen2  = Dzen2()
    app    = App(dzen2)
    add    = lambda args: app.mne.add(args.msg, args.years, 
             args.months if args.months else xrange(1, 12), args.days if args.days else xrange(1, 30), 
             args.hours if args.hours else xrange(1, 24), args.minutes if args.minutes else xrange(1, 60))

    def find(args):
        for indi, indj in app.mne.find(args.msg):
            print indi, indj

    remove = lambda args: app.mne.remove(args.msg)

    parser = argparse.ArgumentParser()
    parser.add_argument('msg', nargs='?', help='Messages')
    parser.add_argument('-y', '--years', default=[today.year], nargs='*', help='years')
    parser.add_argument('-m', '--months', default=[today.month], nargs='*', help='months')
    parser.add_argument('-d', '--days', default=[today.day], nargs='*', help='days')
    parser.add_argument('-u', '--hours', default=[today.hour], nargs='*', help='hours')
    parser.add_argument('-i', '--minutes', default=[today.minute], nargs='*', help='hours')

    parser.add_argument('-f', '--find', dest='cmd', action='store_const',
                    const=find, default=add)

    parser.add_argument('-r', '--remove', dest='cmd', action='store_const',
                    const=remove, default=add)
    args  = parser.parse_args()
    args.cmd(args)
    app.start()


if __name__ == '__main__':
    main()


